name: DevOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v
    
    - name: Test application starts
      run: |
        timeout 10s python app.py || true
        echo "App startup test completed"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        tags: ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
        push: false
        load: true
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
        sleep 10
        docker ps
        echo "Testing container startup..."
        docker logs test-container
        docker stop test-container
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
    
    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.0'
    
    - name: Deploy to Kubernetes
      run: |
        # Update the deployment with the new image
        kubectl set image deployment/todo-app todo-app=${{ secrets.DOCKER_USERNAME }}/todo-app:latest --record
        kubectl rollout status deployment/todo-app
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}