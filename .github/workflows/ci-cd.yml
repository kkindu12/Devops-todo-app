name: DevOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run tests with pytest
      run: |
        if [ -d "tests" ]; then
         python -m pytest tests/ -v  # ✅ CORRECT - fixes PATH issue
        else
         echo "No tests directory found, skipping pytest"
        fi
        
    - name: Validate application
      run: |
        python -c "import app; print('✅ App imports successfully')"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
        sleep 10
        echo "Container status:"
        docker ps
        echo "Container logs:"
        docker logs test-container
        curl -f http://localhost:5000 || echo "App not responding yet"
        docker stop test-container
        docker rm test-container
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
    
    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.0'
    
    - name: Deploy to Kubernetes
      run: |
    
          kubectl apply -f k8s/deployment.yaml
    
    
          sleep 10
    
  
          kubectl set image deployment/todo-app todo-app=${{ secrets.DOCKER_USERNAME }}/todo-app:latest
    
 
          kubectl rollout status deployment/todo-app --timeout=300s
     
          echo "✅ Kubernetes deployment successful!"
   env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}